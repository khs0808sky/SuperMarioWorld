#pragma once
/*
프로젝트를 기존 프로젝트에서 복사했건 새 프로젝트로 만들었건
솔루션에 새로이 프로젝트를 추가했을 때 점검(=만약 다르다면 수정)해야 할 사항

1. 프로젝트 우클릭->속성->구성속성->일반->플랫폼 도구 집합
여기서 (설치되지 않음)이라고 설정되어있을 경우 클릭하여 다른 버젼으로 바꿔야 함
별다른 문구 없이 이름과 버젼명만 적혀있는 항으로 바꿔주면 됨
ex) Visual Studio 2019 (v142)

2. 프로젝트 우클릭->속성->구성속성->C/C++->일반->추가 포함 디렉터리
혹시 여기가 비어있으면 ./ 입력
-> 앞으로 이 프로젝트 안에서 헤더 파일 등의 경로를 입력할 경우
기존의 "같은 폴더" 혹은 "라이브러리 폴더"만을 기준으로 탐색하던 것에서
프로젝트 자체의 기본 폴더 역시 탐색 대상으로 추가하도록 하는 구문

3. 프로젝트 우클릭->속성->구성속성->C/C++->미리 컴파일된 헤더
미리 컴파일된 헤더 : 사용
미리 컴파일된 헤더 파일 : 우리가 사용할 미리 컴파일된 헤더의 이름이 맞는지 체크
기본적으로는 데스크톱 마법사를 이용해 프로젝트를 만들었을 때 pch.h로 만들어지기 때문에,
다른 이름을 쓰고 싶다면 이 부분을 변경해줘야 할 필요가 있음
혹은 이미 다른 프로젝트에서 미리 컴파일된 헤더로 쓰고 있던 게 있고 그 이름이 이 디폴트명이 아닐 경우
그 파일의 이름으로 바꿔줘야 함
-> framework.h라는 이름으로 미리 컴파일된 헤더를 쓰고자 한다면 + 자동 생성된 pch.h 혹은 stdafx.h가 있을 경우
자동 생성된 2개 파일(pch.h/cpp)의 이름을 framework로 바꿔줄 것 + .cpp파일에서 포함하고 있는 헤더 이름도 바꿀 것

4. 프로젝트 우클릭->속성->구성속성->HLSL 컴파일러->일반
진입점 이름 : main에서 VS로 변경
(.HLSL 파일에서 기본적으로 사용하는 메인 함수의 이름은 C++와 마찬가지로 main
그러나 우리는 이를 VS로 바꿨기 때문에, 설정에서도 이에 맞게 VS로 바꿔줘야만 함
바꾸지 않을 경우 entry point not found라는, C++로 치면 main 함수가 보이지 않는다는 에러가 발생)
셰이더 모델 : 5.0으로 변경
우리가 DX에서 사용하는 셰이더의 버젼은 5.0이기 때문에, 이에 맞게 프로젝트의 설정도 변경해줘야 함
변경하지 않을 경우엔 버젼의 차이로 인해 우리가 의도하지 않은 동작이 일어날 수 있음

여기까지는 프로젝트 설정 : 설정해두면 프로젝트 내부에 있는 모든 파일에 기본적으로 적용됨
이제부터는 몇몇 파일에 한해서 설정을 변경해야 함 
-> 특정 파일에서 변경된 내용은 굵게 표시되니 이를 통해 뭐가 변경되었나 확인 가능


A. 프로젝트의 메인 파일에서 전역변수 HWND hWnd를 선언하고,
wWinMain의 메인 루프를 구성해주고,
InitInstance에서 지역 변수가 아닌 전역변수 hWnd를 초기화하도록 바꿔줘야 함
-> 기존 프로젝트의 코드에서 해당 부분을 복사해주면 됨

B. (미리 컴파일된 헤더).cpp 우클릭->속성->구성속성->C/C++->미리 컴파일된 헤더
미리 컴파일된 헤더 : 만들기(/Yc)로 변경
미리 컴파일된 헤더를 이용할 경우, 그 헤더를 컴파일하는 당사자는 사용이 아닌 만들기로 설정을 해줘야
정상적으로 해당 헤더가 미리 컴파일됨


여기까지 점검이 끝나면 이 프로젝트는 실행할 준비가 되었음

*/