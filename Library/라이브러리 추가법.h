#pragma once
/*
외부 라이브러리 추가방법

1. 이 프로젝트에 라이브러리 파일을 직접 추가하는 방식

-> 추가하고자 하는 라이브러리 혹은 프레임워크에서 설치하는 방식을 설명해주기도 하므로
그 절차를 따라가는 것이 이상적

문제는 어지간하면 이런 외부 라이브러리는 대부분 국외에서 만들어진 라이브러리이므로
설치 방법 등을 한글로 제공하지 않는 경우가 많음(+설치방법을 한 눈에 찾기도 힘듦)
그래서 여기선 앞으로 우리가 이용할 2가지 라이브러리에 대한 설치방법만을 설명

 - DirectXTex
A) Github에서 찾을 수 있는 DirectXTex에 접근,
해당 Github에 있는 모든 파일을 다운받음(code 클릭 -> Download zip 선택)

B) 다운받은 파일을 적당한 폴더에다가 추가
위치는 상관없음(모든 파일을 쓰는 것이 아니기 때문)

C) 압축을 푼 폴더 안에 있는 .sln 솔루션 파일 중 해당 라이브러리를 사용할 컴퓨터와 같은 사양의 솔루션을 실행
우리가 사용할 것은 Desktop(거치형 PC)_2019(VS 2019)_Win10(Windows 10 운영체제)

D) 프로그램을 실행하는 환경을 원하는 환경(x86 혹은 x64 등, 우리가 해당 라이브러리를 사용하고자 하는 프로젝트와 일치시키기)으로
솔루션 플랫폼을 설정한 뒤, 디버그(F5) 실행

E) 컴파일이 완료되면 (파일경로)\DirectXTex.lib 파일을 실행할 수 없다는 에러가 발생함
그 에러에서 보여주고 있는 파일 경로를 찾아가, DirectTex.lib 파일을 복사 후
솔루션 파일이 있던 폴더(DirectXTex-Main) 안에 있는 DirectXTex 폴더에 이 파일을 복사

F) 같은 위치에 있는 DirectXTex.h/inl/lib 3개의 파일을 복사한 뒤,
우리가 만들고 있는 프로젝트의 Library 폴더에 DirectXTex 폴더를 만들고 나서 거기에 붙여넣고 프로젝트에 포함

G) 미리 컴파일된 헤더에 위 라이브러리를 사용하기 위한 아래 구문을 추가
추가하는 위치는 DX 관련 라이브러리를 추가했던 부분 바로 밑

#pragmea comment(lib, "dxguid.lib")
#include "Library/DirectXTex/DirectXTex.h"
// DirectXTex를 사용하기 위해 추가하는 라이브러리

이 방법을 사용할 경우 세팅해줘야 할 것이 많지는 않으나,
DirectXTex 프로젝트를 실행시켜서 라이브러리를 만들 때 사용했던 세팅으로 반드시 만들어줘야 정상적으로 동작한다는 문제가 있음
그리고 그게 우리가 만들고 있던 프로젝트와 다를 경우, 맞추는 과정에서 어떤 오류가 생길 지 모름

따라서 위와 같이 파일을 생성해서 여기에 포함시키는 방식보다,
아예 솔루션 자체에 해당 라이브러리 파일을 만드는 프로젝트를 "포함"시켜서
매번 실행할 때마다 생성하도록 만드는 것이 어지간하면 더 나음

//==========================================================================================

2. 솔루션 자체에 해당 라이브러리를 하나의 프로젝트로서 추가하는 방법

- 솔루션 자체에 포함되는 것이기 때문에,
이 방식으로 라이브러리를 적용시킨 뒤부턴 기존 프로젝트를 복사해서 사용하는 게 약간 힘들어짐
따라서 이 이후로는 제공하는 프로젝트 파일을 이용하는 과정이 좀 더 어려워질 것

A) 위와 같은 경로로 라이브러리 파일을 다운받음

B) 적당한 폴더에 풀기

C) DirectXTex 폴더에 들어감

D) 우리가 사용할 환경에 맞는 프로젝트 파일을 제외한 나머지 프로젝트 파일을 빼고
그 폴더 안에 있는 모든 파일을 복사,
우리가 사용할 프로젝트가 있는 솔루션 폴더에 폴더째로 붙여넣기
(= DirectXTex 폴더 자체를 통째로 솔루션 폴더에 복사)
* 혹여라도 D에서 복사한 뒤에 우리가 사용할 환경의 프로젝트 파일이 남아있다면 제거

E) 우리가 해당 라이브러리를 사용할 솔루션에 기존 프로젝트를 추가
* 우리 프로젝트와 같은 기기 환경에 해당하는 프로젝트를 추가하면 됨

F) 속성 -> 구성 형식 -> 정적 라이브러리(.lib)로 설정되어 있는지 확인, 아니라면 .lib로 설정

G) 우리가 사용하는 프로젝트 우클릭 -> 추가 -> 참조 선택 후
DirectXTex 프로젝트를 체크
-> 이를 통해 이 프로젝트는 해당 프로젝트 내부에 있는 파일들까지도 참조할 수 있도록 권한을 허가

H) 솔루션 우클릭 -> 속성 -> 프로젝트 종속성에서
우리가 해당 라이브러리를 사용할 프로젝트를 클릭한 뒤 DirectXTex가 체크되어 있는지 확인

I) 미리 컴파일된 헤더에 위 라이브러리를 사용하기 위한 아래 구문을 추가
추가하는 위치는 DX 관련 라이브러리를 추가했던 부분 바로 밑

#pragmea comment(lib, "dxguid.lib")
#include "../DirectXTex/DirectXTex.h"
// DirectXTex를 사용하기 위해 추가하는 라이브러리


*/